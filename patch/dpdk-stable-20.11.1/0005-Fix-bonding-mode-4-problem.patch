From 3faf16f377052bb9f40c0d17c2590c1a0884abd1 Mon Sep 17 00:00:00 2001
From: huangyichen <huangyichen@iqiyi.com>
Date: Wed, 4 Aug 2021 15:14:04 +0800
Subject: [PATCH 5/6] Fix bonding mode 4 problem:

1. Faulted lacp negotiation, The problem is disscussed in Issue [#725](https://github.com/iqiyi/dpvs/issues/725) of iqiyi/dpvs in detail.
2. Multicast packet miss fetch caused by slow protocol process.
---
 drivers/net/bonding/rte_eth_bond_8023ad.c | 20 +++++++++++---------
 drivers/net/bonding/rte_eth_bond_pmd.c    |  9 +++++++++
 2 files changed, 20 insertions(+), 9 deletions(-)

diff --git a/drivers/net/bonding/rte_eth_bond_8023ad.c b/drivers/net/bonding/rte_eth_bond_8023ad.c
index 5fe004e..52bd960 100644
--- a/drivers/net/bonding/rte_eth_bond_8023ad.c
+++ b/drivers/net/bonding/rte_eth_bond_8023ad.c
@@ -831,7 +831,6 @@ bond_mode_8023ad_periodic_cb(void *arg)
 	struct port *port;
 	struct rte_eth_link link_info;
 	struct rte_ether_addr slave_addr;
-	struct rte_mbuf *lacp_pkt = NULL;
 	uint16_t slave_id;
 	uint16_t i;
 
@@ -903,6 +902,7 @@ bond_mode_8023ad_periodic_cb(void *arg)
 			/* Find LACP packet to this port. Do not check subtype,
 			 * it is done in function that queued packet
 			 */
+			struct rte_mbuf *lacp_pkt = NULL;
 			int retval = rte_ring_dequeue(port->rx_ring,
 					(void **)&lacp_pkt);
 
@@ -911,15 +911,17 @@ bond_mode_8023ad_periodic_cb(void *arg)
 
 			rx_machine_update(internals, slave_id, lacp_pkt);
 		} else {
-			uint16_t rx_count = rte_eth_rx_burst(slave_id,
-					internals->mode4.dedicated_queues.rx_qid,
-					&lacp_pkt, 1);
-
-			if (rx_count == 1)
-				bond_mode_8023ad_handle_slow_pkt(internals,
-						slave_id, lacp_pkt);
-			else
+			uint16_t rx_count, j;
+			struct rte_mbuf *lacp_pkt[16] = { NULL };
+
+			rx_count = rte_eth_rx_burst(slave_id, internals->mode4.dedicated_queues.rx_qid,
+					&lacp_pkt[0], sizeof(lacp_pkt)/sizeof(struct rte_mbuf *));
+			if (rx_count > 0) {
+				for (j = 0; j < rx_count; j++)
+					 bond_mode_8023ad_handle_slow_pkt(internals, slave_id, lacp_pkt[j]);
+			} else {
 				rx_machine_update(internals, slave_id, NULL);
+			}
 		}
 
 		periodic_machine(internals, slave_id);
diff --git a/drivers/net/bonding/rte_eth_bond_pmd.c b/drivers/net/bonding/rte_eth_bond_pmd.c
index 057b1ad..27f35fb 100644
--- a/drivers/net/bonding/rte_eth_bond_pmd.c
+++ b/drivers/net/bonding/rte_eth_bond_pmd.c
@@ -322,6 +322,15 @@ rx_burst_8023ad(void *queue, struct rte_mbuf **bufs, uint16_t nb_pkts,
 
 		/* Handle slow protocol packets. */
 		while (j < num_rx_total) {
+			/* If packet is not pure L2 and is known: 
+			 * Such as OSPF protocol multcast packet,
+			 * we want to handle it in user mode by ourselves, 
+			 * skip slow protocol flow*/
+                        if ((bufs[j]->packet_type & ~RTE_PTYPE_L2_ETHER) != 0) {
+                                j++;
+                                continue;
+                        }
+
 			if (j + 3 < num_rx_total)
 				rte_prefetch0(rte_pktmbuf_mtod(bufs[j + 3], void *));
 
-- 
1.8.3.1

